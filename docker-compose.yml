

services:
  postgres:
    image: postgres:15           # MySQL Docker image version
      # MySQL Docker image version
    container_name: postgres    # Container name
    restart: unless-stopped             # Automatically restart the container if it stops
    environment:
      POSTGRES_USER: root  # Root user password
      POSTGRES_PASSWORD: root       # User to create        # Password for the user
      PGDATA: var/lib/postgresql/data
    ports:
      - "5432:5432"           # Map port 3306 on host to container
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist data
    networks:
    - microservices-net

  pgadmin:
    image: dpage/pgadmin4:7.7
    container_name: ms_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'

    ports:
      - "5050:80"
    depends_on:
      - postgres

  mongodb:
    container_name: ms_mongo_db
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  mongo-express:
    container_name: ms_mongo_express
    image: mongo-express
    ports:
      - 8081:8081
    restart: always
    networks:
      - microservices-net
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_MONGODB_SERVER=mongodb

  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025



networks:
  microservices-net:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin:
  mongo:
    driver: local
